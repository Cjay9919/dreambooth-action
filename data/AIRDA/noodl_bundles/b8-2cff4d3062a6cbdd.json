[{"name":"/#XanoPrefab/Xano/Base/Xano - Request Gallery Save","nodes":[{"id":"5904b77b-ca08-027f-6645-2f26650fe6d2","type":"Component Inputs","parameters":{},"ports":[],"children":[]},{"id":"a76af7b9-93ff-a801-9177-4d4910f49997","type":"Component Outputs","parameters":{},"ports":[],"children":[]},{"id":"52a05ee2-0a31-0bbd-8476-339394db4cdd","type":"JavaScriptFunction","parameters":{"functionScript":"// Function to convert query parameters object to query string\nfunction toQueryString(params) {\n    return Object.keys(params)\n        .map(key => encodeURIComponent(key) + '=' + encodeURIComponent(params[key]))\n        .join('&');\n}\n\n// Prepare the query parameters object\nconst queryParams = {\n    renders_id:Inputs.renderid,\n    img64:Inputs.img64\n     // Assuming 'img64' holds the necessary data for the image generation request\n};\n\n// Check for XanoClient existence\nif (!Boolean(Noodl.Variables.xano)) {\n    console.error('XanoClient does not exist! Check \"Setup XanoClient\"');\n    return;\n}\n\n// The endpoint is now hardcoded to the provided Xano API endpoint\nlet modifiedEndpoint = \"https://xrvq-wx4k-wzpf.e2.xano.io/api:XoRzS70T/ImgGENimg_gallerySave\";\n\n// Assuming POST data should include query parameters - adjust as per your API requirement\nlet postData = queryParams; // Adjust this to match the API's expected data format\n\n// Make the POST API request\nNoodl.Variables.xano.post(modifiedEndpoint, postData).then(\n    (response) => {\n        Outputs.Response = response;\n        Outputs.Success();\n    },\n    (error) => {\n        console.error('API request failed:', error); // Log the error object or message\n        if (error.message) {\n            console.error('Error message:', error.message); // Log specific error message if available\n        }\n        Outputs.Failure();\n    }\n);\n"},"ports":[{"name":"in-renderid","displayName":"renderid","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-img64","displayName":"img64","plug":"input","type":"*","group":"Inputs","index":5},{"name":"out-Success","displayName":"Success","plug":"output","type":"signal","group":"Outputs","index":6},{"name":"out-Failure","displayName":"Failure","plug":"output","type":"signal","group":"Outputs","index":7},{"name":"out-Response","displayName":"Response","plug":"output","type":"*","group":"Outputs","index":8}],"children":[]},{"id":"f24b375d-0359-6fae-bdf5-0e53b6e4ed4f","type":"States","parameters":{"states":"GET,POST,PATCH,PUT,DELETE,HEAD","values":"Request Type","useTransitions":false,"type-Request Type":"string","value-GET-Request Type":"get","value-POST-Request Type":"post","value-PATCH-Request Type":"patch","value-PUT-Request Type":"put","value-DELETE-Request Type":"delete","value-HEAD-Request Type":"head"},"ports":[],"children":[]}],"connections":[{"sourceId":"5904b77b-ca08-027f-6645-2f26650fe6d2","sourcePort":"Request Type","targetId":"f24b375d-0359-6fae-bdf5-0e53b6e4ed4f","targetPort":"currentState"},{"sourceId":"5904b77b-ca08-027f-6645-2f26650fe6d2","sourcePort":"Do","targetId":"52a05ee2-0a31-0bbd-8476-339394db4cdd","targetPort":"run"},{"sourceId":"52a05ee2-0a31-0bbd-8476-339394db4cdd","sourcePort":"out-Success","targetId":"a76af7b9-93ff-a801-9177-4d4910f49997","targetPort":"Success"},{"sourceId":"52a05ee2-0a31-0bbd-8476-339394db4cdd","sourcePort":"out-Failure","targetId":"a76af7b9-93ff-a801-9177-4d4910f49997","targetPort":"Failure"},{"sourceId":"52a05ee2-0a31-0bbd-8476-339394db4cdd","sourcePort":"out-Response","targetId":"a76af7b9-93ff-a801-9177-4d4910f49997","targetPort":"Response"},{"sourceId":"5904b77b-ca08-027f-6645-2f26650fe6d2","sourcePort":"render","targetId":"52a05ee2-0a31-0bbd-8476-339394db4cdd","targetPort":"in-renderid"},{"sourceId":"5904b77b-ca08-027f-6645-2f26650fe6d2","sourcePort":"img","targetId":"52a05ee2-0a31-0bbd-8476-339394db4cdd","targetPort":"in-img64"}],"ports":[{"name":"Response","type":"*","plug":"output","index":0},{"name":"Do","type":{"name":"signal","allowConnectionsOnly":true},"group":"Actions","plug":"input","index":0},{"name":"Success","type":"signal","group":"Signals","plug":"output","index":1},{"name":"Endpoint","type":"*","group":"Request","plug":"input","index":1},{"name":"Error","type":"*","group":"Signals","plug":"output","index":2},{"name":"Request Type","type":{"name":"enum","enums":["GET","POST","PATCH","PUT","DELETE","HEAD"]},"default":"GET","group":"Request","plug":"input","index":2},{"name":"Failure","type":"signal","group":"Signals","plug":"output","index":3},{"name":"Data","type":"*","group":"Request","plug":"input","index":3},{"name":"Done","type":"*","group":"Signals","plug":"output","index":4},{"name":"render","type":"*","group":"Request","plug":"input","index":4},{"name":"room","type":"*","group":"Request","plug":"input","index":5},{"name":"prompt","type":"*","group":"Request","plug":"input","index":6},{"name":"img","type":"*","group":"Request","plug":"input","index":7},{"name":"userId","type":"*","group":"Request","plug":"input","index":8}],"roots":[]}]